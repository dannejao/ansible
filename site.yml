---


- hosts: all   # Kör play updates på alla hosts
  become: true
  pre_tasks:  # denna task körs alltid först innan andra plays, dvs uppdatera först sedan installera.



  - name: install updates (CentOS) # installerar updates på CentOS (dnf)
    tags: always # kör alltid
    dnf:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "CentOS"

  - name: install updates (Ubuntu) # installerar updates på ubuntu (apt)
    tags: always # Kör alltid
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Ubuntu"



# använd ansible för att administrera din workstation
- hosts: workstations # kör på workstations gruppen
  become: true
  tasks:

  - name: install unzip
    package: # kan använda package eftersom det packetet heter lika på dnf och apt
      name: unzip


  - name: install terraform # installera terraform på workstation för cloud tjänster
    unarchive: # låter oss unzippa en extern fil
      src: https://releases.hashicorp.com/terraform/0.12.28/terraform_0.12.28_linux_amd64.zip # Hämtar filen från della url
      dest: /usr/local/bin # sparar filen här, vanligt ställe att lägga dem på.
      remote_src: yes # filen hämtas remote
      mode: 0755 # permission rwx-r-x-r-x
      owner: root # root äger filen
      group: root # root gruppen har tillgång till filen




# web_servers play
- hosts: web_servers # kör denna play enbart på web_servers
  become: true
  tasks:


  - name: install apache and php for Ubuntu servers # play för ubuntu
    tags: apache,apache2,ubuntu
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
      update_cache: yes
    when: ansible_distribution == "Ubuntu"

  - name: install apache and php for CentOS servers # play för CentOS.
    tags: apache,centos,httpd
    dnf:
      name:
        - httpd
        - php
      state: latest
      update_cache: yes
    when: ansible_distribution == "CentOS"

  - name: copy default html file for site
    tags: apache,apache2,httpd # tags för att lättare targetta denna file copy.
    copy: # använd module copy för att kopiera en fil till en server.
      src: default_site.html # filen som ska kopieras. OBS man behöver ej ange directory files den ligger i.
      dest: /var/www/html/index.html # var den ska hamna på servern vi kopierar till. OBS, filnamnet behöver inte vara lika. Detta blir filnamnet vår fil får efter att den kopierats över.
      owner: root # vem som ska äga filen, skulle kunna vara www-user eller vilken apache user vi har.
      group: root # gruppen som ska ha tillgång till filen.
      mode: 0644  # rw-r--r--  rättigheter, owner-group-others.



# db_servers play
- hosts: db_servers
  become: true
  tasks:


  - name: install mariadb package (CentOS)
    tags: centos,db,mariadb
    dnf:
      name:
        - mariadb
      state: latest
      update_cache: yes
    when: ansible_distribution == "CentOS"

  - name: install mariadb pachage (Ubuntu)
    tags: db,mariadb,ubuntu
    apt:
      name:
        - mariadb-server
      state: latest
    when: ansible_distribution == "Ubuntu"



# file server play
- hosts: file_servers
  become: true
  tasks:


  - name: install for samba package for Ubuntu and CentOS
    tags: samba,centos,ubuntu
    package:
      name:
      - samba
      state: latest
      update_cache: yes


